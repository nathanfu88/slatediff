{"version":3,"sources":["../src/diff.js"],"names":["Immutable","require","utils","lcs","path","concatPath","concat","escape","op","isMap","isIndexed","mapDiff","a","b","p","ops","is","areLists","lastKey","removeKey","forEach","aValue","aKey","has","get","sequenceDiff","bValue","areDifferentValues","push","bKey","count","lcsDiff","diff","pathIndex","val","newVal","mapDiffs","primitiveTypeDiff","List","fromJS","module","exports"],"mappings":"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","file":"diff.js","sourcesContent":["'use strict';\n\nvar Immutable = require('immutable');\nvar utils = require('./utils');\nvar lcs = require('./lcs');\nvar path = require('./path');\nvar concatPath = path.concat,\n                  escape = path.escape,\n                  op = utils.op,\n                  isMap = utils.isMap,\n                  isIndexed = utils.isIndexed;\n\nvar mapDiff = function(a, b, p){\n  var ops = [];\n  var path = p || '';\n\n  if(Immutable.is(a, b) || (a == b == null)){ return ops; }\n\n  var areLists = isIndexed(a) && isIndexed(b);\n  var lastKey = null;\n  var removeKey = null\n\n  if(a.forEach){\n    a.forEach(function(aValue, aKey){\n      if (aKey===\"key\") { return }\n      if(b.has(aKey)){\n        if(isMap(aValue) && isMap(b.get(aKey))){\n          ops = ops.concat(mapDiff(aValue, b.get(aKey), concatPath(path, escape(aKey))));\n        }\n        else if(isIndexed(b.get(aKey)) && isIndexed(aValue)){\n          ops = ops.concat(sequenceDiff(aValue, b.get(aKey), concatPath(path, escape(aKey))));\n        }\n        else {\n          var bValue = b.get ? b.get(aKey) : b;\n          var areDifferentValues = (aValue !== bValue);\n          if (areDifferentValues) {\n            ops.push(op('replace', concatPath(path, escape(aKey)), bValue));\n          }\n        }\n      }\n      else {\n        if(areLists){\n          removeKey = (lastKey != null && (lastKey+1) === aKey) ? removeKey : aKey;\n          ops.push( op('remove', concatPath(path, escape(removeKey))) );\n          lastKey = aKey;\n        }\n        else{\n          ops.push( op('remove', concatPath(path, escape(aKey))) );\n        }\n\n      }\n    });\n  }\n\n  b.forEach(function(bValue, bKey){\n    if(a.has && !a.has(bKey)){\n      ops.push( op('add', concatPath(path, escape(bKey)), bValue) );\n    }\n  });\n\n  return ops;\n};\n\nvar sequenceDiff = function (a, b, p) {\n  var ops = [];\n  var path = p || '';\n  if(Immutable.is(a, b) || (a == b == null)){ return ops; }\n  if((a.count() + 1) * (b.count() + 1) >= 10000 ) { return mapDiff(a, b, p); }\n\n  var lcsDiff = lcs.diff(a, b);\n\n  var pathIndex = 0;\n\n  lcsDiff.forEach(function (diff) {\n    if(diff.op === '='){ pathIndex++; }\n    else if(diff.op === '!='){\n      if(isMap(diff.val) && isMap(diff.newVal)){\n        var mapDiffs = mapDiff(diff.val, diff.newVal, concatPath(path, pathIndex));\n        ops = ops.concat(mapDiffs);\n      }\n      else{\n        ops.push(op('replace', concatPath(path, pathIndex), diff.newVal));\n      }\n      pathIndex++;\n    }\n    else if(diff.op === '+'){\n      ops.push(op('add', concatPath(path, pathIndex), diff.val));\n      pathIndex++;\n    }\n    else if(diff.op === '-'){ ops.push(op('remove', concatPath(path, pathIndex))); }\n  });\n\n  return ops;\n};\n\nvar primitiveTypeDiff = function (a, b, p) {\n  var path = p || '';\n  if(a === b){ return []; }\n  else{\n    return [ op('replace', concatPath(path, ''), b) ];\n  }\n};\n\nvar diff = function(a, b, p){\n  if(Immutable.is(a, b)){ return Immutable.List(); }\n  if(a != b && (a == null || b == null)){ return Immutable.fromJS([op('replace', '/', b)]); }\n  if(isIndexed(a) && isIndexed(b)){\n    return Immutable.fromJS(sequenceDiff(a, b));\n  }\n  else if(isMap(a) && isMap(b)){\n    return Immutable.fromJS(mapDiff(a, b));\n  }\n  else{\n    return Immutable.fromJS(primitiveTypeDiff(a, b, p));\n  }\n};\n\nmodule.exports = diff;\n"]}